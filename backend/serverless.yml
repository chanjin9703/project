org: chanjin
app: image2
service: backend
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  
  environment:
    USER_POOL: ${self:service}-pool-${sls:stage}
    USER_POOL_CLIENT: ${self:service}-client-${sls:stage}
  
  
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
          - cognito-idp:AdminInitiateAuth
          - cognito-idp:AdminCreateUser
          - cognito-idp:AdminSetUserPassword
          - cognito-idp:AdminGetUser
          Resource: "*"
    


resources:
  Resources:
    UserPool: 
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:service}-pool-${sls:stage}
        Schema: 
          - Name: email
            Required: true
            Mutable: true
        Policies:
          PasswordPolicy: 
            MinimumLength: 6
        AutoVerifiedAttributes: ["email"]    
    UserClient: 
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:service}-client-${sls:stage}
        GenerateSecret: false
        UserPoolId: 
          Ref: UserPool
        AccessTokenValidity: 5
        IdTokenValidity: 5
        ExplicitAuthFlows: 
          - "ADMIN_NO_SRP_AUTH"
        
functions:
  register:
    handler: functions/register.register
    events:
      - httpApi:
          path: /register
          method: post
plugins:
  - serverless-offline
custom:
  serverless-offline:
    useChildProcesses: true
    noAuth: true
    host: '0.0.0.0'
    port: 3004
   
      